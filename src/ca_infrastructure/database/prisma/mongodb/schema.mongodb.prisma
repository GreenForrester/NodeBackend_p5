// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  timeout = 5000 //timeout 5000 millisecond
}

//env brings 
datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

//better to use uuid but auto for example is good enough
//@map attribute is required in this case
model Product {
  productCode             String  @id @default(auto()) @map("_id") @db.ObjectId
  productName             String
  productvendor           String
  productDescription      String
  quantityInStock         Int
  buyPrice                Float
  msrp                    Float
  creationDate            DateTime @default(now())
  modificationDate        DateTime @updatedAt

  //relations and reverse relations
  orderItems OrderItem[]

  //indexes section
  @@index([productName])
}

model Customer {
  customerCode        String   @id @default(auto()) @map("_id") @db.ObjectId
  customerName        String
  cemail              String   @unique
  phone               String
  address             String
  city                String
  postalCode          String
  country             String
  creationDate        DateTime @default(now())
  modificationDate    DateTime @updatedAt

  //reverse relation
  orders Order[]
}

model Order {
  orderId             String       @id @default(auto()) @map("_id") @db.ObjectId
  orderDate           DateTime     @default(now())
  shippingDate        DateTime
  status              String
  comments            String
  total               Float
  paid                Boolean      @default(false)
  
  customer            Customer?    @relation(fields: [customerId], references: [customerCode])
  customerId          String       @db.ObjectId
  orderItems          OrderItem[]
}

model OrderItem {
  orderitemId         String       @id @default(auto()) @map("_id") @db.ObjectId
  quantity            Int          @default(1) 
  status              String       @default("In process")

  order               Order        @relation(fields: [orderId], references: [orderId])
  orderId             String       @db.ObjectId

  product             Product      @relation(fields: [productId], references: [productCode])
  productId           String       @db.ObjectId
}

model User {
  userId       String   @id @default(auto()) @map("_id") @db.ObjectId
  username     String   @unique
  email        String   @unique
  password     String
  role         String
  status       String
  phoneNumber  String?
  firstName    String?
  lastName     String?
  address      String?
  city         String?
  postalCode   String?
  country      String?
 
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

