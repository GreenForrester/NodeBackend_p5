
services:

  backendapi1:
    image: exnodebackapi4
    container_name: exnodebackapi_1
    hostname: exnodebackapi_1
    ports:
      - "3001:3000" #kong will use 3000 in compose network
    volumes:
      - app-logs1:/var/log/app
    networks:
      - my-network
  backendapi2:
    image: exnodebackapi4
    container_name: exnodebackapi_2
    hostname: exnodebackapi_2
    ports:
      - "3002:3000"
    volumes:
      - app-logs2:/var/log/app
    networks:
      - my-network
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my-network
  loki:
    image: grafana/loki:3.2.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/mnt/config/loki-config.yml
      - ./var/loki:/var/loki
    command: -config.file=/mnt/config/loki-config.yml
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - my-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "4000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
      - loki
    networks:
      - my-network

  kong:
    image: kong:3.8.0-ubuntu
    container_name: kong
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    volumes:
      - "./kong.yml:/usr/local/kong/declarative/kong.yml"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_LOG_LEVEL=debug
      - KONG_PLUGINS=bundled
    user: "root"
    networks:
      - my-network
    
  promtail:
    image: grafana/promtail:latest 
    container_name: promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock       # Access Docker logs, container communication
      - app-logs1:/var/log/app:ro                       # Access app logs (read-only)
      - app-logs2:/var/log/app:ro                       # Access app logs (read-only)
    ports:
      - "9080:9080" # Optional: Expose Promtail's web UI
    networks:
      - my-network
    depends_on:
      - loki
    
volumes:
  grafana-storage: {}
  loki-data: {}
  app-logs1: {}
  app-logs2: {}

networks:
  my-network:
    driver: bridge